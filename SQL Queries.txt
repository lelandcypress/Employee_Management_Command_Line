GIVEN a command-line application that accepts user input



















WHEN I choose to add a department
THEN I am prompted to enter the name of the department and that department is added to the database

INSERT INTO department(name)
VALUES ('Placeholder');

WHEN I choose to add a role
THEN I am prompted to enter the name, salary, and department for the role and that role is added to the database
SOLUTION: Build Insert Statement

INSERT INTO role(name,salary,department_id)
VALUES (namePH,SalaryPH,deparment_idPH);

Need to build objects 

WHEN I choose to add an employee
THEN I am prompted to enter the employeeâ€™s first name, last name, role, and manager, and that employee is added to the database
SOLUTION: Build Insert Statement

INSERT INTO employee(first_name,last_name,role_id,manager_id)
VALUES(first_namePH,last_namePH,role_idPH,manager_id);

WHEN I choose to update an employee role
THEN I am prompted to select an employee to update and their new role and this information is updated in the database 


UPDATE employee
SET role_id = PH
WHERE employee.id = PH




* Application allows users to update employee managers (2 points).

UPDATE employee
SET manager.id = PH
WHERE employee.id = PH

* Application allows users to view employees by manager (2 points).


 SELECT  concat(manager.first_name,' ',manager.last_name) AS 'Manager', concat(employee.first_name,' ',employee.last_name) AS 'Employee Name'  
    FROM employee
    INNER JOIN manager
    ON employee.manager_id = manager.id
    WHERE concat(manager.first_name,' ',manager.last_name) = 'Carson Wentz';




         
    


* Application allows users to delete departments, roles, and employees (2 points for each).

DELETE FROM employee
WHERE employee.id = 7;


BUDGET QUERY

SELECT DISTINCT department.name AS 'Department', SUM(role.salary) AS 'Staff Budget'
FROM department
INNER JOIN role
ON department.id = role.department_id
INNER JOIN employee
ON employee.role_id = role.id
GROUP BY department.name;

